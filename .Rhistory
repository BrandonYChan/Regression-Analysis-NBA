pull()
n1 <- df_3s %>%
filter(Decade=="20's") %>%
select(Decade) %>%
count() %>%
pull()
n2 <- df_3s %>%
filter(Decade=="90's") %>%
select(Decade) %>%
count() %>%
pull()
s_pooled <- sqrt(((n1-1)*s1^2 + (n2-1)*s2^2) / (n1+n2-2))
# Observed test statistic
t_obs <- ((mean3s_2020s - means3s_1990s)-0)/(s_pooled * sqrt(1/n1+1/n2))
# Evaluated at 95% significance
t_alpha <- qt(0.05, n1+n2-2, lower.tail = FALSE)
df_3s <- league_df %>%
filter(!is.na(Pace), !is.na(`3PA`), !is.na(`3P%`)) %>%
select(Season,`3PA`, `3P%`)
df_3s %>%
ggplot(aes(Season, `3PA`, group=1)) +
geom_point() +
geom_line(aes(color='orange'), show.legend = FALSE) +
scale_x_discrete(breaks=c("1979-80", "1989-90", "1999-00", "2009-10", "2019-20")) +
ggtitle("3-Pointers Made Per-Game Increases Almost Every Season") +
labs(caption = "3-pt line distance decreased from 1994 to 1997") +
theme(panel.background = element_rect(color="orange"))
# Remove variables with direct linear dependencies
df_pred3 <- league_df %>%
select(-c(Season, Ht, `3P`, `3P%`, FG, FGA, `FG%`, `FT/FGA`, `eFG%`, `TS%`))
best_subsets_3s <- regsubsets(`3PA`~., df_pred3, method="backward")
best_summary_3s <- summary(best_subsets_3s)
plot(best_summary_3s$bic,
main="5 Stats Should be Used to Predict 3PA",
xlab = "Number of Variables",
ylab = "BIC",
type = "b"
)
best_coefs <- coef(best_subsets_3s, 5)
coef_names <- names(best_coefs)
coef_names
set.seed(1)
# Only include seasons where the 3-point line exists
df_3line <- league_df %>% filter(!is.na(`3PA`))
# Split into train and test sets
train_indicies <- sample(1:nrow(df_3line), 0.7*nrow(df_3s))
train_top5 <- df_3line[train_indicies,]
test_top5 <- df_3line[-train_indicies,]
# Create model trained on train set
model_top5 <- lm(`3PA` ~ TRB+STL+TOV+PTS+`ORB%` , train_top5)
summary(model_top5)
cooks.distance(model_top5)
anova(model_top5)
SS_reg = 832.2294 + 2314.7249 + 335.8212 + 35.3356 + 380.5590
SS_res = 11.63
SS_tot = SS_reg+SS_res
DF = c(5, 25, 5+25)
SS = c(SS_reg, SS_res, SS_tot)
MS = SS/DF
F = c(round(MS[1]/MS[2],2), "", "")
ANOVA_table = tibble(
Label = c("Regression", "Residual", "Total"),
DF, SS, MS, F
)
ANOVA_table
qf(0.05, 5, 25, lower.tail=FALSE)
# Test model on test set
test_3PA <- test_top5$`3PA`
pred_3PA <- predict(model_top5, test_top5)
# Evaluating the model
SSres <- sum((test_3PA-pred_3PA)^2)
SSreg <- sum((pred_3PA-mean(test_3PA))^2)
Rsq <- SSreg/(SSreg+SSres)
RMSE <- sqrt(mean((test_3PA-pred_3PA)^2))
df_comparison <- data.frame(True3PA = test_3PA, Predicted3PA = pred_3PA)
head(df_comparison)
# Original Model
lm_defence <- lm(`3PA`~STL+TOV+BLK+DRB, df_3line)
summary(lm_defence)
# Box-Cox Transform
boxcox_transform <- boxcox(lm_defence)
lambda <- boxcox_transform$x[which.max(boxcox_transform$y)]
if(lambda == 0){
df_3line$transformed_3PA <- log(df_3line$`3PA`)
} else{
df_3line$transformed_3PA <- (df_3line$`3PA` - 1) / lambda
}
# Transformed Model
lm_defence_transformed <- lm(transformed_3PA~STL+TOV+BLK+DRB, df_3line)
cookd <- cooks.distance(lm_defence_transformed)
plot(cookd,
pch = 20,
main = "Cook's Distance")
abline(h = 4/nrow(df_3line), col = "orange")
influential_obs <- which(cookd > 4/nrow(df_3line))
df_3line_new <- df_3line[-influential_obs,]
# Transformed Model with Removed Influential Observations
lm_defence_transformed <- lm(transformed_3PA~STL+TOV+BLK+DRB, df_3line_new)
summary(lm_defence_transformed)
anova(lm_defence)
SSreg_d <- sum(c(2260.7082,1439.4514,  4.6749, 413.6498, 429.5215))
SSres_d <- 429.52
DF_defense <- c(4, 40, 4+40)
SS_defense <- c(SSreg_d, SSres_d, SSres_d+SSreg_d)
MS_defense <- SS_defense/DF_defense
ANOVA_defense <- tibble(
Label = c("Regression", "Residual", "Total"),
DF_defense, SS_defense, MS_defense
)
ANOVA_defense
confint(lm_defence, level=0.95)
plot(league_df$STL, league_df$`3PA`,
main="More Steals Lead to Fewer Threes Attempted",
xlab="Steals Per Game",
ylab="3PA Per Game"
)
abline(lm(`3PA`~STL, league_df))
plot(league_df$BLK, league_df$`3PA`,
main="More Blocks Coincide with Fewer Threes Attempted",
xlab="Blocks Per Game",
ylab="3PA Per Game"
)
abline(lm(`3PA`~BLK, league_df))
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(tibble.print_min = 4, tibble.print_max = 10)
# install.packages("MASS")
# install.packages("leaps")
# install.packages("DT")
# install.packages("pander")
# remove.packages("htmltools")
# install.packages("htmltools")
library(MASS)
library(tidyverse)
library(leaps)
library(knitr)
library(pander)
library(DT)
select <- dplyr::select
index <- tibble(
Order = c("1. ", "2. ", "3. ", "4. ", "5. ", "6. "),
Item = c("Objectives", "Hypothesis Test", "Stat Selection", "Model Testing", "Impact of Defense", "Conclusions")
)
index
league_df <- read_csv("https://raw.githubusercontent.com/BrandonYChan/ballindata/refs/heads/master/static/CSV/League/per100_league.csv", show_col_types = FALSE) %>%
filter(Season >= "1950-51") %>%
select(-c(Rk, Lg))
datatable(league_df, options=list(autoWidth=TRUE), width="80%")
# Group by decade
df_3s <- league_df %>%
mutate(Decade = paste(substr(Season, 6, 6), "0's", sep=""))
# Get mean 3's for each decade
decade3s <- df_3s %>%
group_by(Decade) %>%
filter(!(Decade %in% c("50's", "60's", "70's"))) %>%
summarise(Mean3s = mean(`3PA`)) %>%
arrange(desc(Mean3s))
decade3s
mean3s_2020s <- decade3s %>%
filter(Decade=="20's") %>%
select(Mean3s) %>%
pull()
means3s_1990s <- decade3s %>%
filter(Decade=="90's") %>%
select(Mean3s) %>%
pull()
mu <- mean(decade3s$Mean3s)
# Pooled t-test
s1 <- df_3s %>%
filter(Decade=="20's") %>%
summarise(sd(`3PA`)) %>%
pull()
s2 <- df_3s %>%
filter(Decade=="90's") %>%
summarise(sd(`3PA`)) %>%
pull()
n1 <- df_3s %>%
filter(Decade=="20's") %>%
select(Decade) %>%
count() %>%
pull()
n2 <- df_3s %>%
filter(Decade=="90's") %>%
select(Decade) %>%
count() %>%
pull()
s_pooled <- sqrt(((n1-1)*s1^2 + (n2-1)*s2^2) / (n1+n2-2))
# Observed test statistic
t_obs <- ((mean3s_2020s - means3s_1990s)-0)/(s_pooled * sqrt(1/n1+1/n2))
# Evaluated at 95% significance
t_alpha <- qt(0.05, n1+n2-2, lower.tail = FALSE)
df_3s <- league_df %>%
filter(!is.na(Pace), !is.na(`3PA`), !is.na(`3P%`)) %>%
select(Season,`3PA`, `3P%`)
df_3s %>%
ggplot(aes(Season, `3PA`, group=1)) +
geom_point() +
geom_line(aes(color='orange'), show.legend = FALSE) +
scale_x_discrete(breaks=c("1979-80", "1989-90", "1999-00", "2009-10", "2019-20")) +
ggtitle("3-Pointers Made Per-Game Increases Almost Every Season") +
labs(caption = "3-pt line distance decreased from 1994 to 1997") +
theme(panel.background = element_rect(color="orange"))
# Remove variables with direct linear dependencies
df_pred3 <- league_df %>%
select(-c(Season, Ht, `3P`, `3P%`, FG, FGA, `FG%`, `FT/FGA`, `eFG%`, `TS%`))
best_subsets_3s <- regsubsets(`3PA`~., df_pred3, method="backward")
best_summary_3s <- summary(best_subsets_3s)
plot(best_summary_3s$bic,
main="5 Stats Should be Used to Predict 3PA",
xlab = "Number of Variables",
ylab = "BIC",
type = "b"
)
best_coefs <- coef(best_subsets_3s, 5)
coef_names <- names(best_coefs)
coef_names
set.seed(1)
# Only include seasons where the 3-point line exists
df_3line <- league_df %>% filter(!is.na(`3PA`))
# Split into train and test sets
train_indicies <- sample(1:nrow(df_3line), 0.7*nrow(df_3s))
train_top5 <- df_3line[train_indicies,]
test_top5 <- df_3line[-train_indicies,]
# Create model trained on train set
model_top5 <- lm(`3PA` ~ TRB+STL+TOV+PTS+`ORB%` , train_top5)
summary(model_top5)
cooks.distance(model_top5)
anova(model_top5)
SS_reg = 832.2294 + 2314.7249 + 335.8212 + 35.3356 + 380.5590
SS_res = 11.63
SS_tot = SS_reg+SS_res
DF = c(5, 25, 5+25)
SS = c(SS_reg, SS_res, SS_tot)
MS = SS/DF
F = c(round(MS[1]/MS[2],2), "", "")
ANOVA_table = tibble(
Label = c("Regression", "Residual", "Total"),
DF, SS, MS, F
)
ANOVA_table
qf(0.05, 5, 25, lower.tail=FALSE)
# Test model on test set
test_3PA <- test_top5$`3PA`
pred_3PA <- predict(model_top5, test_top5)
# Evaluating the model
SSres <- sum((test_3PA-pred_3PA)^2)
SSreg <- sum((pred_3PA-mean(test_3PA))^2)
Rsq <- SSreg/(SSreg+SSres)
RMSE <- sqrt(mean((test_3PA-pred_3PA)^2))
df_comparison <- data.frame(True3PA = test_3PA, Predicted3PA = pred_3PA)
head(df_comparison)
# Original Model
lm_defence <- lm(`3PA`~STL+TOV+BLK+DRB, df_3line)
summary(lm_defence)
# Box-Cox Transform
boxcox_transform <- boxcox(lm_defence)
lambda <- boxcox_transform$x[which.max(boxcox_transform$y)]
if(lambda == 0){
df_3line$transformed_3PA <- log(df_3line$`3PA`)
} else{
df_3line$transformed_3PA <- (df_3line$`3PA` - 1) / lambda
}
# Transformed Model
lm_defence_transformed <- lm(transformed_3PA~STL+TOV+BLK+DRB, df_3line)
cookd <- cooks.distance(lm_defence_transformed)
plot(cookd,
pch = 20,
main = "Cook's Distance")
abline(h = 4/nrow(df_3line), col = "orange")
influential_obs <- which(cookd > 4/nrow(df_3line))
df_3line_new <- df_3line[-influential_obs,]
# Transformed Model with Removed Influential Observations
lm_defence_transformed <- lm(transformed_3PA~STL+TOV+BLK+DRB, df_3line_new)
summary(lm_defence_transformed)
anova(lm_defence)
SSreg_d <- sum(c(2260.7082,1439.4514,  4.6749, 413.6498, 429.5215))
SSres_d <- 429.52
DF_defense <- c(4, 40, 4+40)
SS_defense <- c(SSreg_d, SSres_d, SSres_d+SSreg_d)
MS_defense <- SS_defense/DF_defense
ANOVA_defense <- tibble(
Label = c("Regression", "Residual", "Total"),
DF_defense, SS_defense, MS_defense
)
ANOVA_defense
confint(lm_defence, level=0.95)
plot(league_df$STL, league_df$`3PA`,
main="More Steals Lead to Fewer Threes Attempted",
xlab="Steals Per Game",
ylab="3PA Per Game"
)
abline(lm(`3PA`~STL, league_df))
plot(league_df$BLK, league_df$`3PA`,
main="More Blocks Coincide with Fewer Threes Attempted",
xlab="Blocks Per Game",
ylab="3PA Per Game"
)
abline(lm(`3PA`~BLK, league_df))
# Original Model
lm_defence <- lm(`3PA`~STL+TOV+BLK+DRB, df_3line)
summary(lm_defence)
summary(lm_defence)
lambda
cookd <- cooks.distance(lm_defence_transformed)
plot(cookd,
pch = 20,
main = "Cook's Distance"),
cookd <- cooks.distance(lm_defence_transformed)
plot(cookd,
pch = 20,
main = "Cook's Distance",
xlab="Season Indices")
abline(h = 4/nrow(df_3line), col = "orange")
cookd <- cooks.distance(lm_defence_transformed)
plot(cookd,
pch = 20,
main = "Cook's Distance Plot of the Box-Cox Transformed Model",
xlab="Season Indices",
ylab="Cook's Distance")
abline(h = 4/nrow(df_3line), col = "orange")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(tibble.print_min = 4, tibble.print_max = 10)
# install.packages("MASS")
# install.packages("leaps")
# install.packages("DT")
# install.packages("pander")
# remove.packages("htmltools")
# install.packages("htmltools")
library(MASS)
library(tidyverse)
library(leaps)
library(knitr)
library(pander)
library(DT)
select <- dplyr::select
index <- tibble(
Order = c("1. ", "2. ", "3. ", "4. ", "5. ", "6. "),
Item = c("Objectives", "Hypothesis Test", "Stat Selection", "Model Testing", "Impact of Defense", "Conclusions")
)
index
league_df <- read_csv("https://raw.githubusercontent.com/BrandonYChan/ballindata/refs/heads/master/static/CSV/League/per100_league.csv", show_col_types = FALSE) %>%
filter(Season >= "1950-51") %>%
select(-c(Rk, Lg))
datatable(league_df, options=list(autoWidth=TRUE), width="80%")
# Group by decade
df_3s <- league_df %>%
mutate(Decade = paste(substr(Season, 6, 6), "0's", sep=""))
# Get mean 3's for each decade
decade3s <- df_3s %>%
group_by(Decade) %>%
filter(!(Decade %in% c("50's", "60's", "70's"))) %>%
summarise(Mean3s = mean(`3PA`)) %>%
arrange(desc(Mean3s))
decade3s
mean3s_2020s <- decade3s %>%
filter(Decade=="20's") %>%
select(Mean3s) %>%
pull()
means3s_1990s <- decade3s %>%
filter(Decade=="90's") %>%
select(Mean3s) %>%
pull()
mu <- mean(decade3s$Mean3s)
# Pooled t-test
s1 <- df_3s %>%
filter(Decade=="20's") %>%
summarise(sd(`3PA`)) %>%
pull()
s2 <- df_3s %>%
filter(Decade=="90's") %>%
summarise(sd(`3PA`)) %>%
pull()
n1 <- df_3s %>%
filter(Decade=="20's") %>%
select(Decade) %>%
count() %>%
pull()
n2 <- df_3s %>%
filter(Decade=="90's") %>%
select(Decade) %>%
count() %>%
pull()
s_pooled <- sqrt(((n1-1)*s1^2 + (n2-1)*s2^2) / (n1+n2-2))
# Observed test statistic
t_obs <- ((mean3s_2020s - means3s_1990s)-0)/(s_pooled * sqrt(1/n1+1/n2))
# Evaluated at 95% significance
t_alpha <- qt(0.05, n1+n2-2, lower.tail = FALSE)
df_3s <- league_df %>%
filter(!is.na(Pace), !is.na(`3PA`), !is.na(`3P%`)) %>%
select(Season,`3PA`, `3P%`)
df_3s %>%
ggplot(aes(Season, `3PA`, group=1)) +
geom_point() +
geom_line(aes(color='orange'), show.legend = FALSE) +
scale_x_discrete(breaks=c("1979-80", "1989-90", "1999-00", "2009-10", "2019-20")) +
ggtitle("3-Pointers Made Per-Game Increases Almost Every Season") +
labs(caption = "3-pt line distance decreased from 1994 to 1997") +
theme(panel.background = element_rect(color="orange"))
# Remove variables with direct linear dependencies
df_pred3 <- league_df %>%
select(-c(Season, Ht, `3P`, `3P%`, FG, FGA, `FG%`, `FT/FGA`, `eFG%`, `TS%`))
best_subsets_3s <- regsubsets(`3PA`~., df_pred3, method="backward")
best_summary_3s <- summary(best_subsets_3s)
plot(best_summary_3s$bic,
main="5 Stats Should be Used to Predict 3PA",
xlab = "Number of Variables",
ylab = "BIC",
type = "b"
)
best_coefs <- coef(best_subsets_3s, 5)
coef_names <- names(best_coefs)
coef_names
set.seed(1)
# Only include seasons where the 3-point line exists
df_3line <- league_df %>% filter(!is.na(`3PA`))
# Split into train and test sets
train_indicies <- sample(1:nrow(df_3line), 0.7*nrow(df_3s))
train_top5 <- df_3line[train_indicies,]
test_top5 <- df_3line[-train_indicies,]
# Create model trained on train set
model_top5 <- lm(`3PA` ~ TRB+STL+TOV+PTS+`ORB%` , train_top5)
summary(model_top5)
cooks.distance(model_top5)
anova(model_top5)
SS_reg = 832.2294 + 2314.7249 + 335.8212 + 35.3356 + 380.5590
SS_res = 11.63
SS_tot = SS_reg+SS_res
DF = c(5, 25, 5+25)
SS = c(SS_reg, SS_res, SS_tot)
MS = SS/DF
F = c(round(MS[1]/MS[2],2), "", "")
ANOVA_table = tibble(
Label = c("Regression", "Residual", "Total"),
DF, SS, MS, F
)
ANOVA_table
qf(0.05, 5, 25, lower.tail=FALSE)
# Test model on test set
test_3PA <- test_top5$`3PA`
pred_3PA <- predict(model_top5, test_top5)
# Evaluating the model
SSres <- sum((test_3PA-pred_3PA)^2)
SSreg <- sum((pred_3PA-mean(test_3PA))^2)
Rsq <- SSreg/(SSreg+SSres)
RMSE <- sqrt(mean((test_3PA-pred_3PA)^2))
df_comparison <- data.frame(True3PA = test_3PA, Predicted3PA = pred_3PA)
head(df_comparison)
# Original Model
lm_defence <- lm(`3PA`~STL+TOV+BLK+DRB, df_3line)
summary(lm_defence)
# Box-Cox Transform
boxcox_transform <- boxcox(lm_defence)
lambda <- boxcox_transform$x[which.max(boxcox_transform$y)]
if(lambda == 0){
df_3line$transformed_3PA <- log(df_3line$`3PA`)
} else{
df_3line$transformed_3PA <- (df_3line$`3PA` - 1) / lambda
}
# Transformed Model
lm_defence_transformed <- lm(transformed_3PA~STL+TOV+BLK+DRB, df_3line)
cookd <- cooks.distance(lm_defence_transformed)
plot(cookd,
pch = 20,
main = "Cook's Distance Plot of the Box-Cox Transformed Model",
xlab="Season Indices",
ylab="Cook's Distance")
abline(h = 4/nrow(df_3line), col = "orange")
influential_obs <- which(cookd > 4/nrow(df_3line))
df_3line_new <- df_3line[-influential_obs,]
# Transformed Model with Removed Influential Observations
lm_defence_transformed <- lm(transformed_3PA~STL+TOV+BLK+DRB, df_3line_new)
summary(lm_defence_transformed)
anova(lm_defence)
SSreg_d <- sum(c(2260.7082,1439.4514,  4.6749, 413.6498, 429.5215))
SSres_d <- 429.52
DF_defense <- c(4, 40, 4+40)
SS_defense <- c(SSreg_d, SSres_d, SSres_d+SSreg_d)
MS_defense <- SS_defense/DF_defense
ANOVA_defense <- tibble(
Label = c("Regression", "Residual", "Total"),
DF_defense, SS_defense, MS_defense
)
ANOVA_defense
plot(league_df$STL, league_df$`3PA`,
main="More Steals Lead to Fewer Threes Attempted",
xlab="Steals Per Game",
ylab="3PA Per Game"
)
abline(lm(`3PA`~STL, league_df))
plot(league_df$BLK, league_df$`3PA`,
main="More Blocks Coincide with Fewer Threes Attempted",
xlab="Blocks Per Game",
ylab="3PA Per Game"
)
abline(lm(`3PA`~BLK, league_df))
plot(league_df$STL, league_df$`3PA`,
main="More Steals Lead to Fewer Threes Attempted",
xlab="Steals Per Game",
ylab="3PA Per Game"
)
abline(lm(`3PA`~STL, league_df))
plot(league_df$BLK, league_df$`3PA`,
main="More Blocks Coincide with Fewer Threes Attempted",
xlab="Blocks Per Game",
ylab="3PA Per Game"
)
abline(lm(`3PA`~BLK, league_df))
# Original Model
lm_defence <- lm(`3PA`~STL+TOV+BLK+DRB, df_3line)
summary(lm_defence)
# Transformed Model with Removed Influential Observations
lm_defence_transformed <- lm(transformed_3PA~STL+TOV+BLK+DRB, df_3line_new)
summary(lm_defence_transformed)
